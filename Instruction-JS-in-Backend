1.1: Synchronous VS Asynchronous

    What is Node JS?
    Node JS is a single threaded, Non blocking, asynchronous javascript runtime.

    Call back Hell:
    When we use multiple asynchronous task then the read ablity of the code is lost. It is called Call back Hell. To remove callback Hell, we use promises.

1.2: Promises and handling multiple Promises

    # What is promise?
    Promise is that which helps us to give the data. There are three states of promise. Pending state, resolved state, rejected state.

    # How do we create promise?
    we create promise with the help of Promise constructor. and we use a new key word. Promise do an asynchronous work. here an example:

    const promise = new Promise((resolve, reject) =>{
        here we do database call
        or any fnction to get data
    })

    const myPromise = new Promise(()=>{
        const user = null;
        if(!user){
            reject("Something went wrong!")
        }else{
            setTimout(()=>{
            resolve("Sucessfully Got Data")
        }, 1000)
        }
    })
    myPromise.then(data).catch(error)

    To handle multiple promise we use promise.all

1.3: Async Await

    

1.4: Errors and error handling

1.5: import export
